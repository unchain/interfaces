// Code generated by protoc-gen-go. DO NOT EDIT.
// source: trigger.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InitTriggerRequest struct {
	StubServer           uint32   `protobuf:"varint,1,opt,name=stub_server,json=stubServer,proto3" json:"stub_server,omitempty"`
	Config               []byte   `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitTriggerRequest) Reset()         { *m = InitTriggerRequest{} }
func (m *InitTriggerRequest) String() string { return proto.CompactTextString(m) }
func (*InitTriggerRequest) ProtoMessage()    {}
func (*InitTriggerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_trigger_a1225338f266fad1, []int{0}
}
func (m *InitTriggerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitTriggerRequest.Unmarshal(m, b)
}
func (m *InitTriggerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitTriggerRequest.Marshal(b, m, deterministic)
}
func (dst *InitTriggerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitTriggerRequest.Merge(dst, src)
}
func (m *InitTriggerRequest) XXX_Size() int {
	return xxx_messageInfo_InitTriggerRequest.Size(m)
}
func (m *InitTriggerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InitTriggerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InitTriggerRequest proto.InternalMessageInfo

func (m *InitTriggerRequest) GetStubServer() uint32 {
	if m != nil {
		return m.StubServer
	}
	return 0
}

func (m *InitTriggerRequest) GetConfig() []byte {
	if m != nil {
		return m.Config
	}
	return nil
}

type InitTriggerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitTriggerResponse) Reset()         { *m = InitTriggerResponse{} }
func (m *InitTriggerResponse) String() string { return proto.CompactTextString(m) }
func (*InitTriggerResponse) ProtoMessage()    {}
func (*InitTriggerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_trigger_a1225338f266fad1, []int{1}
}
func (m *InitTriggerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitTriggerResponse.Unmarshal(m, b)
}
func (m *InitTriggerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitTriggerResponse.Marshal(b, m, deterministic)
}
func (dst *InitTriggerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitTriggerResponse.Merge(dst, src)
}
func (m *InitTriggerResponse) XXX_Size() int {
	return xxx_messageInfo_InitTriggerResponse.Size(m)
}
func (m *InitTriggerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InitTriggerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InitTriggerResponse proto.InternalMessageInfo

type TriggerRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TriggerRequest) Reset()         { *m = TriggerRequest{} }
func (m *TriggerRequest) String() string { return proto.CompactTextString(m) }
func (*TriggerRequest) ProtoMessage()    {}
func (*TriggerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_trigger_a1225338f266fad1, []int{2}
}
func (m *TriggerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TriggerRequest.Unmarshal(m, b)
}
func (m *TriggerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TriggerRequest.Marshal(b, m, deterministic)
}
func (dst *TriggerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TriggerRequest.Merge(dst, src)
}
func (m *TriggerRequest) XXX_Size() int {
	return xxx_messageInfo_TriggerRequest.Size(m)
}
func (m *TriggerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TriggerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TriggerRequest proto.InternalMessageInfo

type TriggerResponse struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Message              []byte   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TriggerResponse) Reset()         { *m = TriggerResponse{} }
func (m *TriggerResponse) String() string { return proto.CompactTextString(m) }
func (*TriggerResponse) ProtoMessage()    {}
func (*TriggerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_trigger_a1225338f266fad1, []int{3}
}
func (m *TriggerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TriggerResponse.Unmarshal(m, b)
}
func (m *TriggerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TriggerResponse.Marshal(b, m, deterministic)
}
func (dst *TriggerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TriggerResponse.Merge(dst, src)
}
func (m *TriggerResponse) XXX_Size() int {
	return xxx_messageInfo_TriggerResponse.Size(m)
}
func (m *TriggerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TriggerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TriggerResponse proto.InternalMessageInfo

func (m *TriggerResponse) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *TriggerResponse) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

type AckRequest struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Response             []byte   `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckRequest) Reset()         { *m = AckRequest{} }
func (m *AckRequest) String() string { return proto.CompactTextString(m) }
func (*AckRequest) ProtoMessage()    {}
func (*AckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_trigger_a1225338f266fad1, []int{4}
}
func (m *AckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckRequest.Unmarshal(m, b)
}
func (m *AckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckRequest.Marshal(b, m, deterministic)
}
func (dst *AckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckRequest.Merge(dst, src)
}
func (m *AckRequest) XXX_Size() int {
	return xxx_messageInfo_AckRequest.Size(m)
}
func (m *AckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AckRequest proto.InternalMessageInfo

func (m *AckRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *AckRequest) GetResponse() []byte {
	if m != nil {
		return m.Response
	}
	return nil
}

type AckResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AckResponse) Reset()         { *m = AckResponse{} }
func (m *AckResponse) String() string { return proto.CompactTextString(m) }
func (*AckResponse) ProtoMessage()    {}
func (*AckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_trigger_a1225338f266fad1, []int{5}
}
func (m *AckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AckResponse.Unmarshal(m, b)
}
func (m *AckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AckResponse.Marshal(b, m, deterministic)
}
func (dst *AckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AckResponse.Merge(dst, src)
}
func (m *AckResponse) XXX_Size() int {
	return xxx_messageInfo_AckResponse.Size(m)
}
func (m *AckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AckResponse proto.InternalMessageInfo

type NackRequest struct {
	Tag                  string   `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NackRequest) Reset()         { *m = NackRequest{} }
func (m *NackRequest) String() string { return proto.CompactTextString(m) }
func (*NackRequest) ProtoMessage()    {}
func (*NackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_trigger_a1225338f266fad1, []int{6}
}
func (m *NackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NackRequest.Unmarshal(m, b)
}
func (m *NackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NackRequest.Marshal(b, m, deterministic)
}
func (dst *NackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NackRequest.Merge(dst, src)
}
func (m *NackRequest) XXX_Size() int {
	return xxx_messageInfo_NackRequest.Size(m)
}
func (m *NackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NackRequest proto.InternalMessageInfo

func (m *NackRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *NackRequest) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type NackResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NackResponse) Reset()         { *m = NackResponse{} }
func (m *NackResponse) String() string { return proto.CompactTextString(m) }
func (*NackResponse) ProtoMessage()    {}
func (*NackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_trigger_a1225338f266fad1, []int{7}
}
func (m *NackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NackResponse.Unmarshal(m, b)
}
func (m *NackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NackResponse.Marshal(b, m, deterministic)
}
func (dst *NackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NackResponse.Merge(dst, src)
}
func (m *NackResponse) XXX_Size() int {
	return xxx_messageInfo_NackResponse.Size(m)
}
func (m *NackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NackResponse proto.InternalMessageInfo

type CloseRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseRequest) Reset()         { *m = CloseRequest{} }
func (m *CloseRequest) String() string { return proto.CompactTextString(m) }
func (*CloseRequest) ProtoMessage()    {}
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_trigger_a1225338f266fad1, []int{8}
}
func (m *CloseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRequest.Unmarshal(m, b)
}
func (m *CloseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRequest.Marshal(b, m, deterministic)
}
func (dst *CloseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRequest.Merge(dst, src)
}
func (m *CloseRequest) XXX_Size() int {
	return xxx_messageInfo_CloseRequest.Size(m)
}
func (m *CloseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRequest proto.InternalMessageInfo

type CloseResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseResponse) Reset()         { *m = CloseResponse{} }
func (m *CloseResponse) String() string { return proto.CompactTextString(m) }
func (*CloseResponse) ProtoMessage()    {}
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_trigger_a1225338f266fad1, []int{9}
}
func (m *CloseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseResponse.Unmarshal(m, b)
}
func (m *CloseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseResponse.Marshal(b, m, deterministic)
}
func (dst *CloseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseResponse.Merge(dst, src)
}
func (m *CloseResponse) XXX_Size() int {
	return xxx_messageInfo_CloseResponse.Size(m)
}
func (m *CloseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloseResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*InitTriggerRequest)(nil), "proto.InitTriggerRequest")
	proto.RegisterType((*InitTriggerResponse)(nil), "proto.InitTriggerResponse")
	proto.RegisterType((*TriggerRequest)(nil), "proto.TriggerRequest")
	proto.RegisterType((*TriggerResponse)(nil), "proto.TriggerResponse")
	proto.RegisterType((*AckRequest)(nil), "proto.AckRequest")
	proto.RegisterType((*AckResponse)(nil), "proto.AckResponse")
	proto.RegisterType((*NackRequest)(nil), "proto.NackRequest")
	proto.RegisterType((*NackResponse)(nil), "proto.NackResponse")
	proto.RegisterType((*CloseRequest)(nil), "proto.CloseRequest")
	proto.RegisterType((*CloseResponse)(nil), "proto.CloseResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TriggerClient is the client API for Trigger service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TriggerClient interface {
	Init(ctx context.Context, in *InitTriggerRequest, opts ...grpc.CallOption) (*InitTriggerResponse, error)
	Trigger(ctx context.Context, in *TriggerRequest, opts ...grpc.CallOption) (*TriggerResponse, error)
	Ack(ctx context.Context, in *AckRequest, opts ...grpc.CallOption) (*AckResponse, error)
	Nack(ctx context.Context, in *NackRequest, opts ...grpc.CallOption) (*NackResponse, error)
	Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseResponse, error)
}

type triggerClient struct {
	cc *grpc.ClientConn
}

func NewTriggerClient(cc *grpc.ClientConn) TriggerClient {
	return &triggerClient{cc}
}

func (c *triggerClient) Init(ctx context.Context, in *InitTriggerRequest, opts ...grpc.CallOption) (*InitTriggerResponse, error) {
	out := new(InitTriggerResponse)
	err := c.cc.Invoke(ctx, "/proto.Trigger/Init", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *triggerClient) Trigger(ctx context.Context, in *TriggerRequest, opts ...grpc.CallOption) (*TriggerResponse, error) {
	out := new(TriggerResponse)
	err := c.cc.Invoke(ctx, "/proto.Trigger/Trigger", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *triggerClient) Ack(ctx context.Context, in *AckRequest, opts ...grpc.CallOption) (*AckResponse, error) {
	out := new(AckResponse)
	err := c.cc.Invoke(ctx, "/proto.Trigger/Ack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *triggerClient) Nack(ctx context.Context, in *NackRequest, opts ...grpc.CallOption) (*NackResponse, error) {
	out := new(NackResponse)
	err := c.cc.Invoke(ctx, "/proto.Trigger/Nack", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *triggerClient) Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseResponse, error) {
	out := new(CloseResponse)
	err := c.cc.Invoke(ctx, "/proto.Trigger/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TriggerServer is the server API for Trigger service.
type TriggerServer interface {
	Init(context.Context, *InitTriggerRequest) (*InitTriggerResponse, error)
	Trigger(context.Context, *TriggerRequest) (*TriggerResponse, error)
	Ack(context.Context, *AckRequest) (*AckResponse, error)
	Nack(context.Context, *NackRequest) (*NackResponse, error)
	Close(context.Context, *CloseRequest) (*CloseResponse, error)
}

func RegisterTriggerServer(s *grpc.Server, srv TriggerServer) {
	s.RegisterService(&_Trigger_serviceDesc, srv)
}

func _Trigger_Init_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitTriggerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TriggerServer).Init(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Trigger/Init",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TriggerServer).Init(ctx, req.(*InitTriggerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trigger_Trigger_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TriggerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TriggerServer).Trigger(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Trigger/Trigger",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TriggerServer).Trigger(ctx, req.(*TriggerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trigger_Ack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TriggerServer).Ack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Trigger/Ack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TriggerServer).Ack(ctx, req.(*AckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trigger_Nack_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TriggerServer).Nack(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Trigger/Nack",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TriggerServer).Nack(ctx, req.(*NackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Trigger_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TriggerServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Trigger/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TriggerServer).Close(ctx, req.(*CloseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Trigger_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Trigger",
	HandlerType: (*TriggerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Init",
			Handler:    _Trigger_Init_Handler,
		},
		{
			MethodName: "Trigger",
			Handler:    _Trigger_Trigger_Handler,
		},
		{
			MethodName: "Ack",
			Handler:    _Trigger_Ack_Handler,
		},
		{
			MethodName: "Nack",
			Handler:    _Trigger_Nack_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _Trigger_Close_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "trigger.proto",
}

func init() { proto.RegisterFile("trigger.proto", fileDescriptor_trigger_a1225338f266fad1) }

var fileDescriptor_trigger_a1225338f266fad1 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0xcd, 0x4e, 0x32, 0x41,
	0x10, 0x0c, 0xff, 0x1f, 0x05, 0x0b, 0x7c, 0xcd, 0x4f, 0x70, 0x2f, 0x92, 0x39, 0x71, 0x30, 0x98,
	0x60, 0x4c, 0x8c, 0x09, 0x07, 0xe2, 0xc9, 0x83, 0x1e, 0x56, 0xef, 0x06, 0xc8, 0xb8, 0x21, 0x28,
	0x83, 0x33, 0x83, 0x6f, 0xe2, 0xfb, 0x9a, 0x9d, 0xe9, 0x15, 0x76, 0x31, 0x9e, 0xa0, 0xaa, 0xba,
	0xaa, 0xb7, 0x6b, 0x10, 0x58, 0xbd, 0x8e, 0x63, 0xa9, 0x27, 0x3b, 0xad, 0xac, 0xa2, 0x8a, 0xfb,
	0x11, 0x0f, 0xa0, 0xfb, 0xed, 0xda, 0x3e, 0x7b, 0x2d, 0x92, 0x1f, 0x7b, 0x69, 0x2c, 0x9d, 0xa3,
	0x61, 0xec, 0x7e, 0xf9, 0x62, 0xa4, 0xfe, 0x94, 0x7a, 0x58, 0x18, 0x15, 0xc6, 0x41, 0x84, 0x84,
	0x7a, 0x72, 0x0c, 0x0d, 0x50, 0x5d, 0xa9, 0xed, 0xeb, 0x3a, 0x1e, 0x16, 0x47, 0x85, 0x71, 0x33,
	0x62, 0x24, 0xfa, 0xe8, 0x66, 0xe2, 0xcc, 0x4e, 0x6d, 0x8d, 0x14, 0x1d, 0xb4, 0xb2, 0x1b, 0xc4,
	0x0c, 0xed, 0xdc, 0x10, 0x75, 0x50, 0xb2, 0x8b, 0xd8, 0x2d, 0xab, 0x47, 0xc9, 0x5f, 0x1a, 0xa2,
	0xf6, 0x2e, 0x8d, 0x59, 0xc4, 0x92, 0xd7, 0xa4, 0x50, 0xdc, 0x02, 0xf3, 0xd5, 0x26, 0xfd, 0xdc,
	0x53, 0x67, 0x88, 0x7f, 0x9a, 0x73, 0xd9, 0xfa, 0x83, 0x45, 0x80, 0x86, 0xf3, 0x32, 0xbc, 0x46,
	0xe3, 0x71, 0xf1, 0x57, 0x56, 0x0f, 0x15, 0xa9, 0xb5, 0xd2, 0x2e, 0xa8, 0x1e, 0x79, 0x20, 0x5a,
	0x68, 0x7a, 0x1b, 0xc7, 0xb4, 0xd0, 0xbc, 0x7b, 0x53, 0x46, 0xa6, 0x07, 0xb6, 0x11, 0x30, 0xf6,
	0x03, 0xd3, 0xaf, 0x22, 0x6a, 0x7c, 0x32, 0xcd, 0x50, 0x4e, 0x6a, 0xa2, 0x33, 0xff, 0x18, 0x93,
	0xd3, 0x27, 0x08, 0xc3, 0xdf, 0x24, 0x6e, 0xea, 0xe6, 0x90, 0xd4, 0xe7, 0xb1, 0x9c, 0x7b, 0x90,
	0xa7, 0xd9, 0x79, 0x81, 0xd2, 0x7c, 0xb5, 0xa1, 0xff, 0x2c, 0x1f, 0x3a, 0x0c, 0xe9, 0x98, 0xe2,
	0xe9, 0x4b, 0x94, 0x93, 0x1b, 0x29, 0xd5, 0x8e, 0x7a, 0x0a, 0xbb, 0x19, 0x8e, 0x0d, 0x53, 0x54,
	0xdc, 0xd1, 0x94, 0xaa, 0xc7, 0x95, 0x84, 0xbd, 0x2c, 0xe9, 0x3d, 0xcb, 0xaa, 0x23, 0xaf, 0xbe,
	0x03, 0x00, 0x00, 0xff, 0xff, 0xf5, 0x66, 0x9a, 0x87, 0xa0, 0x02, 0x00, 0x00,
}
